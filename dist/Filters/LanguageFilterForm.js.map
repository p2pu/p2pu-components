{"version":3,"sources":["../../src/Filters/LanguageFilterForm.jsx"],"names":["React","Component","t","ApiHelper","Select","LanguageFilterForm","props","resourceType","api","params","callback","response","options","mapArrayToSelectOptions","languages","setState","fetchResource","updateQueryParams","lang","filter","l","array","map","item","value","code","label","name_local","state","fetchLanguages","console","log","option","indexOf","langName","langs","o","length","handleSelect","removeLanguage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { t } from 'ttag';\nimport ApiHelper from '../utils/apiHelper'\nimport Select from '../InputFields/Select';\n\nexport default class LanguageFilterForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { options: [] };\n  }\n\n  componentDidMount() {\n    this.fetchLanguages();\n  }\n\n  fetchLanguages = () => {\n    const resourceType = `coursesLanguages`;\n    const api = new ApiHelper(resourceType);\n    const params = {};\n    const callback = (response) => {\n      const options = this.mapArrayToSelectOptions(response.languages);\n      this.setState({ options })\n    }\n\n    api.fetchResource({ params, callback })\n  }\n\n  handleSelect = ({languages}) => {\n    if (languages) {\n      this.props.updateQueryParams({languages: [...this.props.languages, languages]});\n    }\n  }\n\n  removeLanguage = lang => {\n    this.props.updateQueryParams({languages: this.props.languages.filter(l => l != lang)});\n  }\n\n  mapArrayToSelectOptions = (array) => {\n    return array.map((item) => ({ value: item.code, label: item.name_local }))\n  }\n\n  render() {\n    console.log('this.props.languages', this.props.languages)\n    let options = this.state.options.filter( option => this.props.languages.indexOf(option.value) == -1 );\n\n    const langName = lang => {\n      let langs = this.state.options.filter(o => o.value === lang);\n      console.log(langs);\n      if (langs.length){\n        return langs[0].label;\n      }\n      return lang;\n    };\n\n    return(\n      <form class=\"search\">\n        <label for=\"search-input\" class=\"form-label\">Languages</label>\n        <Select\n          name={'languages'}\n          classes='no-flex'\n          options={options}\n          isMulti={false}\n          value={null}\n          handleChange={this.handleSelect}\n          placeholder={t`Select one or more`}\n        />\n        <div class=\"badges selected pt-4\">\n          { \n            this.props.languages.map(lang =>\n              <span class=\"badge topic-selected topic\"><span class=\"material-icons dismiss\" role=\"button\" onClick={()=> this.removeLanguage(lang)}>close</span>{langName(lang)}</span>\n            )\n          }\n        </div>\n      </form>\n    )\n  }\n}\n"],"file":"LanguageFilterForm.js"}