{"version":3,"sources":["../../src/LearningCircles/LearningCircleCard.jsx"],"names":["React","t","Card","CardTitle","CardBody","COLOR_CLASSES","date","day","time","cardFormatting","color","label","LearningCircleCard","props","learningCircle","locale","onSelectResult","formattedStartDate","start_date","formattedStartTime","meeting_time","formattedEndDate","last_meeting_date","formattedEndTime","end_time","weekDay","schedule","meets_weekly","time_zone","frequency","weeks","name","course","title","isSignupOpen","today","Date","startDate","endDate","isUpcoming","isCompleted","isInProgress","status","colorClass","cardLabel","dateLabel","onClick","e","preventDefault","window","location","href","url","imageUrl","defaultImageUrl","image_url","city","facilitator","venue"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { t } from \"ttag\";\nimport { Card, CardTitle, CardBody } from '../Card';\nimport { COLOR_CLASSES } from '../utils/constants';\nimport { date, day, time } from '../utils/i18n';\n\nconst cardFormatting = {\n  'upcoming': {\n    color: 'p2pu-blue',\n    label: 'Starting soon',\n    class: 'starting-soon',\n  },\n  'in_progress': {\n    color: 'p2pu-green',\n    label: 'In progress',\n    class: 'in-progress',\n  },\n  'closed': {\n    color: 'p2pu-yellow',\n    label: 'Sign up closed',\n    class: 'signup-closed',\n  },\n  'completed': {\n    color: 'p2pu-gray',\n    label: 'Completed',\n    class: 'closed',\n  }\n}\n\nconst LearningCircleCard = (props) => {\n  const { learningCircle, locale, onSelectResult } = props;\n  const formattedStartDate = date(learningCircle.start_date, locale);\n  const formattedStartTime = time(learningCircle.meeting_time);\n  const formattedEndDate = date(learningCircle.last_meeting_date, locale);\n  const formattedEndTime = time(learningCircle.end_time);\n  const weekDay = day(learningCircle.day);\n\n  const schedule = learningCircle.meets_weekly ? t`${weekDay} from ${formattedStartTime} to ${formattedEndTime} (${learningCircle.time_zone})` : t`${formattedStartTime} to ${formattedEndTime} (${learningCircle.time_zone})`;\n  const frequency = learningCircle.meets_weekly ? t`${learningCircle.weeks} weeks starting ${formattedStartDate}` : t`${learningCircle.weeks} meetings starting ${formattedStartDate}`;\n  const name = learningCircle.name ? learningCircle.name : learningCircle.course.title;\n\n  const isSignupOpen = props.isSignupOpen\n  const today = new Date()\n  const startDate = new Date(learningCircle.start_date)\n  const endDate = new Date(learningCircle.last_meeting_date)\n\n  const isUpcoming = startDate > today\n  const isCompleted = endDate < today\n  const isInProgress = startDate < today && endDate > today\n\n  const status = learningCircle.status || 'completed'\n  const colorClass = cardFormatting[status].color\n  const cardLabel = cardFormatting[status].label\n\n  let dateLabel = t`Ended ${formattedEndDate}`\n  if (status === 'in_progress' || status === 'closed') {\n    dateLabel = t`Started ${formattedStartDate}`\n  } else if (status === 'upcoming') {\n    dateLabel = t`Starting ${formattedStartDate}`\n  }\n\n  const onClick = (e) => {\n    e.preventDefault();\n    if (onSelectResult) {\n      onSelectResult(learningCircle)\n    } else {\n      window.location.href = learningCircle.url;\n    }\n  }\n  let imageUrl = props.defaultImageUrl;\n  if (learningCircle.image_url){\n    imageUrl = learningCircle.image_url;\n  }\n\n  return (\n    <div className=\"result-item grid-item col-md-6 col-lg-4\" >\n      <a className=\"learning-circle-card-link\" href={learningCircle.url} onClick={onClick} >\n        <div className={`card learning-circle ${cardFormatting[status].class}`}>\n          <div className=\"status-tag\"><span>{t(cardLabel)}</span></div>\n          <div className=\"card-image\">\n            <img src={imageUrl} alt={name} className=\"card-img-top\" />\n          </div>\n          <div className=\"card-header\">\n            <span className=\"eyebrow\">{dateLabel}</span>\n            <h3 className=\"card-title\">{name}</h3>\n          </div>\n          <div className=\"card-body\">\n            <span className=\"schedule\">\n              <i className=\"material-icons\">schedule</i>\n              { schedule }\n            </span>\n            <span className=\"duration\">\n              <i className=\"material-icons\">today</i>{ frequency }\n            </span>\n            <span className=\"city-country\">\n              <i className=\"material-icons\">place</i>\n              {learningCircle.city}\n            </span>\n            <span className=\"facilitator\">\n              <i className=\"material-icons\">face</i>\n              {t`Facilitated by ${learningCircle.facilitator}`}\n            </span>\n            <span className=\"location\">\n              <i className=\"material-icons\">store</i>\n              {t`Meeting at ${learningCircle.venue}`}\n            </span>\n          </div>\n          <div className=\"card-footer\">\n            <button className=\"btn p2pu-btn btn-sm gray mx-auto d-block\">\n              {isSignupOpen ? t`Sign up` : t`View details`}\n            </button>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default LearningCircleCard\n"],"file":"LearningCircleCard.js"}