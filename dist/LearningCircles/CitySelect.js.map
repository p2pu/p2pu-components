{"version":3,"sources":["../../src/LearningCircles/CitySelect.js"],"names":["React","useState","useEffect","PropTypes","Select","jsonp","CitySelect","props","cities","setCities","url","origin","err","res","console","log","items","cities_","filter","city","uniqBy","arr","fn","Map","map","x","values","el","value","onChange","selected","query","label","handleChange","name","getSelected","isMulti","v","find","id","disabled","required","errorMessage","classes","selectClasses","handleInputChange","noResultsText","placeholder","isClearable","rest","customStyles","indicatorSeparator","provided","state","display","propTypes","func","isRequired","string","helpText","bool","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AACjC,kBAA4BN,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,GAAG,aAAMH,KAAK,CAACI,MAAZ,iCAAT;AACAN,IAAAA,KAAK,CAACK,GAAD,EAAM,IAAN,EAAY,UAACE,GAAD,EAAMC,GAAN,EAAc;AAC7B,UAAID,GAAJ,EAAS;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,OAFD,MAEO;AACL,YAAIC,GAAG,CAACG,KAAR,EAAe;AACb,cAAIC,OAAO,GAAGJ,GAAG,CAACG,KAAJ,CAAUE,MAAV,CAAkB,UAAAC,IAAI;AAAA,mBAAIA,IAAJ;AAAA,WAAtB,CAAd;;AACA,cAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,EAAN;AAAA,sCAAiB,IAAIC,GAAJ,CAAQF,GAAG,CAACG,GAAJ,CAAQ,UAACC,CAAD;AAAA,qBAAO,CAAC,OAAOH,EAAP,KAAc,UAAd,GAA2BA,EAAE,CAACG,CAAD,CAA7B,GAAmCA,CAAC,CAACH,EAAD,CAArC,EAA2CG,CAA3C,CAAP;AAAA,aAAR,CAAR,EAAuEC,MAAvE,EAAjB;AAAA,WAAf;;AACAT,UAAAA,OAAO,GAAGG,MAAM,CAACH,OAAD,EAAU,UAAAU,EAAE;AAAA,mBAAIA,EAAE,CAACC,KAAP;AAAA,WAAZ,CAAhB;AACAnB,UAAAA,SAAS,CAACQ,OAAD,CAAT;AACD,SALD,MAKO;AACLH,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;AACF,KAbI,CAAL;AAcD,GAhBQ,EAgBN,EAhBM,CAAT;;AAmBA,MAAMgB,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAC7B,QAAMC,KAAK,GAAGD,QAAQ,GAAGA,QAAQ,CAACE,KAAZ,GAAoBF,QAA1C;AACAvB,IAAAA,KAAK,CAAC0B,YAAN,qBAAsB1B,KAAK,CAAC2B,IAA5B,EAAmCH,KAAnC;AACD,GAHD;;AAKA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAP,KAAK,EAAI;AAC3B,QAAQQ,OAAR,GAAoB7B,KAApB,CAAQ6B,OAAR;;AACA,QAAI,CAACR,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,QAAIQ,OAAO,YAAWR,KAAK,KAAK,QAArB,CAAX,EAA2C;AACzC,aAAOA,KAAK,CAACJ,GAAN,CAAU,UAAAa,CAAC;AAAA,eAAI7B,MAAM,CAAC8B,IAAP,CAAY,UAAAnB,IAAI;AAAA,iBAAIA,IAAI,CAACa,KAAL,KAAeK,CAAnB;AAAA,SAAhB,CAAJ;AAAA,OAAX,CAAP;AACD;;AAED,WAAO7B,MAAM,CAAC8B,IAAP,CAAY,UAAAnB,IAAI;AAAA,aAAIA,IAAI,CAACa,KAAL,KAAeJ,KAAnB;AAAA,KAAhB,CAAP;AACD,GAXD;;AAaA,MACEM,IADF,GAII3B,KAJJ,CACE2B,IADF;AAAA,MACQK,EADR,GAIIhC,KAJJ,CACQgC,EADR;AAAA,MACYX,KADZ,GAIIrB,KAJJ,CACYqB,KADZ;AAAA,MACmBY,QADnB,GAIIjC,KAJJ,CACmBiC,QADnB;AAAA,MAC6BC,QAD7B,GAIIlC,KAJJ,CAC6BkC,QAD7B;AAAA,MACuCC,YADvC,GAIInC,KAJJ,CACuCmC,YADvC;AAAA,MAEEC,OAFF,GAIIpC,KAJJ,CAEEoC,OAFF;AAAA,MAEWC,aAFX,GAIIrC,KAJJ,CAEWqC,aAFX;AAAA,MAE0BC,iBAF1B,GAIItC,KAJJ,CAE0BsC,iBAF1B;AAAA,MAE6CC,aAF7C,GAIIvC,KAJJ,CAE6CuC,aAF7C;AAAA,MAGEC,WAHF,GAIIxC,KAJJ,CAGEwC,WAHF;AAAA,MAGeC,WAHf,GAIIzC,KAJJ,CAGeyC,WAHf;AAAA,MAG4BZ,OAH5B,GAII7B,KAJJ,CAG4B6B,OAH5B;AAAA,MAGwCa,IAHxC,4BAII1C,KAJJ;;AAMA,MAAMuB,QAAQ,GAAGK,WAAW,CAACP,KAAD,CAA5B;AAEA,MAAMsB,YAAY,GAAG;AACnBC,IAAAA,kBAAkB,EAAE,4BAACC,QAAD,EAAWC,KAAX;AAAA,6CACfD,QADe;AAElBE,QAAAA,OAAO,EAAE;AAFS;AAAA;AADD,GAArB;AAOA,sBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAGpB,IADT;AAEE,IAAA,SAAS,wBAAkBU,aAAlB,CAFX;AAGE,IAAA,KAAK,EAAGd,QAHV;AAIE,IAAA,OAAO,EAAGtB,MAJZ;AAKE,IAAA,QAAQ,EAAGqB,QALb;AAME,IAAA,aAAa,EAAGgB,iBANlB;AAOE,IAAA,aAAa,EAAGC,aAPlB;AAQE,IAAA,WAAW,EAAGC,WARhB;AASE,IAAA,WAAW,EAAGC,WAThB;AAUE,IAAA,OAAO,EAAGZ,OAVZ;AAWE,IAAA,UAAU,EAAGI,QAXf;AAYE,IAAA,eAAe,EAAE,aAZnB;AAaE,IAAA,MAAM,EAAEU;AAbV,KAcMD,IAdN,EADF;AAkBD,CAzEM;AA2EP3C,UAAU,CAACiD,SAAX,GAAuB;AACrBtB,EAAAA,YAAY,EAAE9B,SAAS,CAACqD,IAAV,CAAeC,UADR;AAErBvB,EAAAA,IAAI,EAAE/B,SAAS,CAACuD,MAAV,CAAiBD,UAFF;AAGrB7B,EAAAA,KAAK,EAAEzB,SAAS,CAACuD,MAHI;AAIrBb,EAAAA,iBAAiB,EAAE1C,SAAS,CAACqD,IAJR;AAKrBb,EAAAA,OAAO,EAAExC,SAAS,CAACuD,MALE;AAMrBZ,EAAAA,aAAa,EAAE3C,SAAS,CAACuD,MANJ;AAOrBX,EAAAA,WAAW,EAAE5C,SAAS,CAACuD,MAPF;AAQrBC,EAAAA,QAAQ,EAAExD,SAAS,CAACuD,MARC;AASrBhB,EAAAA,YAAY,EAAEvC,SAAS,CAACuD,MATH;AAUrBV,EAAAA,WAAW,EAAE7C,SAAS,CAACyD,IAVF;AAWrBxB,EAAAA,OAAO,EAAEjC,SAAS,CAACyD;AAXE,CAAvB;AAcAtD,UAAU,CAACuD,YAAX,GAA0B;AACxBf,EAAAA,aAAa,EAAE,0BADS;AAExBC,EAAAA,WAAW,EAAE,6BAFW;AAGxBJ,EAAAA,OAAO,EAAE,EAHe;AAIxBT,EAAAA,IAAI,EAAE,aAJkB;AAKxBD,EAAAA,YAAY,EAAE,sBAACH,QAAD;AAAA,WAAchB,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDe,QAAtD,CAAd;AAAA,GALU;AAMxBkB,EAAAA,WAAW,EAAE,IANW;AAOxBZ,EAAAA,OAAO,EAAE,KAPe;AAQxBR,EAAAA,KAAK,EAAE;AARiB,CAA1B;AAWA,eAAetB,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Select from 'react-select'\nimport jsonp from 'jsonp'\n\n\nexport const CitySelect = props => {\n  const [cities, setCities] = useState([])\n\n  useEffect(() => {\n    const url = `${props.origin}/api/learningcircles/cities/`;\n    jsonp(url, null, (err, res) => {\n      if (err) {\n        console.log(err)\n      } else {\n        if (res.items) {\n          let cities_ = res.items.filter( city => city );\n          const uniqBy = (arr, fn) => [...new Map(arr.map((x) => [typeof fn === 'function' ? fn(x) : x[fn], x])).values()]\n          cities_ = uniqBy(cities_, el => el.value);\n          setCities(cities_);\n        } else {\n          console.log(res)\n        }\n      }\n    });\n  }, [])\n\n\n  const onChange = (selected) => {\n    const query = selected ? selected.label : selected;\n    props.handleChange({ [props.name]: query })\n  }\n\n  const getSelected = value => {\n    const { isMulti } = props;\n    if (!value) {\n      return null\n    }\n\n    if (isMulti && typeof(value === 'object')) {\n      return value.map(v => cities.find(city => city.label === v))\n    }\n\n    return cities.find(city => city.label === value)\n  }\n\n  const { \n    name, id, value, disabled, required, errorMessage,\n    classes, selectClasses, handleInputChange, noResultsText,\n    placeholder, isClearable, isMulti, ...rest \n  } = props;\n\n  const selected = getSelected(value);\n\n  const customStyles = {\n    indicatorSeparator: (provided, state) => ({\n      ...provided,\n      display: 'none',\n    }),\n  }\n\n  return(\n    <Select\n      name={ name }\n      className={ `city-select ${selectClasses}` }\n      value={ selected }\n      options={ cities }\n      onChange={ onChange }\n      onInputChange={ handleInputChange }\n      noResultsText={ noResultsText }\n      placeholder={ placeholder }\n      isClearable={ isClearable }\n      isMulti={ isMulti }\n      isDisabled={ disabled }\n      classNamePrefix={'city-select'}\n      styles={customStyles}\n      {...rest}\n    />\n  )\n}\n\nCitySelect.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  handleInputChange: PropTypes.func,\n  classes: PropTypes.string,\n  noResultsText: PropTypes.string,\n  placeholder: PropTypes.string,\n  helpText: PropTypes.string,\n  errorMessage: PropTypes.string,\n  isClearable: PropTypes.bool,\n  isMulti: PropTypes.bool,\n}\n\nCitySelect.defaultProps = {\n  noResultsText: \"No results for this city\",\n  placeholder: \"Start typing a city name...\",\n  classes: \"\",\n  name: \"select-city\",\n  handleChange: (selected) => console.log(\"Implement a function to save selection\", selected),\n  isClearable: true,\n  isMulti: false,\n  value: null,\n}\n\nexport default CitySelect;\n"],"file":"CitySelect.js"}