{"version":3,"sources":["../../src/LearningCircles/Browse.jsx"],"names":["React","t","Tab","Tabs","TabList","TabPanel","OPEN_TAB_TEXT","CLOSED_TAB_TEXT","LearningCircleCard","BrowseLearningCircles","props","results","onSelectResult","locale","columnBreakpoints","resultsCount","signupOpenCount","signupClosedCount","resultsTab","updateResultsTab","NoResultsComponent","showNoResultsComponent","contact","isLoading","length","map","circle","index","defaultImageUrl","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { t } from \"ttag\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport { OPEN_TAB_TEXT, CLOSED_TAB_TEXT } from '../utils/constants'\n\nimport LearningCircleCard from './LearningCircleCard'\nimport 'react-tabs/style/react-tabs.css';\n\nconst BrowseLearningCircles = (props) => {\n  const { results, onSelectResult, locale, columnBreakpoints, resultsCount, signupOpenCount, signupClosedCount, resultsTab, updateResultsTab, NoResultsComponent, showNoResultsComponent, contact, isLoading } = props;\n\n  return (\n    <Tabs selectedIndex={resultsTab} onSelect={updateResultsTab}>\n      <TabList>\n        <Tab><span className=\"minicaps bold text-xs\">{`${OPEN_TAB_TEXT} (${signupOpenCount})`}</span></Tab>\n        <Tab><span className=\"minicaps bold text-xs\">{`${CLOSED_TAB_TEXT} (${signupClosedCount})`}</span></Tab>\n      </TabList>\n      <TabPanel>\n        { !isLoading && results.length === 0 ?\n          <NoResultsComponent updateResultsTab={updateResultsTab} tabIndex={resultsTab} contact={contact} /> :\n          <div className=\"search-results row grid\">\n            {\n              results.map((circle, index) => (\n                <LearningCircleCard\n                  key={`learning-circle-${index}`}\n                  learningCircle={circle}\n                  locale={locale}\n                  classes=\"col-md-4 col-md-4 my-3\"\n                  onSelectResult={onSelectResult}\n                  isSignupOpen={true}\n                  defaultImageUrl={props.defaultImageUrl}\n                />\n              ))\n            }\n          </div>\n        }\n      </TabPanel>\n      <TabPanel>\n        { !isLoading && results.length === 0 ?\n          <NoResultsComponent updateResultsTab={updateResultsTab} tabIndex={resultsTab} contact={contact} /> :\n          <div className=\"search-results row grid\">\n            {\n              results.map((circle, index) => (\n                <LearningCircleCard\n                  key={`learning-circle-${index}`}\n                  learningCircle={circle}\n                  locale={locale}\n                  classes=\"col-md-4 my-4\"\n                  onSelectResult={onSelectResult}\n                  isSignupOpen={false}\n                  defaultImageUrl={props.defaultImageUrl}\n                />\n              ))\n            }\n          </div>\n        }\n      </TabPanel>\n    </Tabs>\n  )\n}\n\nBrowseLearningCircles.defaultProps = {\n  results: [],\n  signupOpenCount: 0,\n  signupClosedCount: 0,\n  resultsCount: 0\n}\n\n\nexport default BrowseLearningCircles\n"],"file":"Browse.js"}