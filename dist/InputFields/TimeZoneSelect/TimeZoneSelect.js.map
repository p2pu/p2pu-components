{"version":3,"sources":["../../../src/InputFields/TimeZoneSelect/TimeZoneSelect.js"],"names":["React","Component","PropTypes","axios","Select","timezones","InputWrapper","GEONAMES_ENDPOINT","TimeZoneSelect","props","selected","timezone","value","handleChange","name","latitude","longitude","url","get","then","res","data","timezoneId","err","console","log","Intl","DateTimeFormat","resolvedOptions","timeZone","detectTimeZone","label","id","required","disabled","errorMessage","helpText","classes","selectClasses","isClearable","isMulti","rest","timezoneOptions","map","tz","find","opt","onChange","theme","colors","primary","primary75","primary50","primary25","propTypes","func","isRequired","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios';\nimport Select from 'react-select'; //TODO\nimport timezones from './timezone-names.js';\nimport InputWrapper from '../InputWrapper'\n\nconst GEONAMES_ENDPOINT = 'https://secure.geonames.org/timezoneJSON'\n\nexport default class TimeZoneSelect extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.detectTimeZone()\n  }\n\n  onChange = (selected) => {\n    const timezone = !!selected ? selected.value : null;\n    this.props.handleChange({ [this.props.name]: timezone });\n  }\n\n  detectTimeZone = () => {\n    if (!this.props.value) {\n      if (!!this.props.latitude && !!this.props.longitude) {\n        // use selected city to detect timezone\n        const url = `${GEONAMES_ENDPOINT}?lat=${this.props.latitude}&lng=${this.props.longitude}&username=p2pu`;\n        axios.get(url).then(res => {\n          const timezone = res.data.timezoneId;\n          this.props.handleChange({ [this.props.name]: timezone })\n        }).catch(err => console.log(err))\n      } else {\n        // detect timezone from browser\n        const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.props.handleChange({ [this.props.name]: timezone })\n      }\n    }\n  }\n\n\n  render() {\n    const { label, name, id, value, required, disabled, errorMessage, helpText, classes, selectClasses, isClearable, isMulti, ...rest } = this.props\n    const timezoneOptions = timezones.map((tz) => ({value: tz, label: tz }))\n    const selected = timezoneOptions.find(opt => opt.value === value) || null;\n\n    return(\n      <InputWrapper\n        label={label}\n        name={name}\n        id={id}\n        required={required}\n        disabled={disabled}\n        errorMessage={errorMessage}\n        helpText={helpText}\n        classes={classes}\n      >\n        <Select\n          name={ name }\n          id={ name }\n          className={ `form-group input-with-label ${selectClasses}` }\n          value={ selected }\n          onChange={ this.onChange }\n          options={timezoneOptions}\n          isClearable={ isClearable }\n          isMulti={ isMulti }\n          isDisabled={ disabled }\n          classNamePrefix={'timezone-select'}\n          theme={theme => ({\n            ...theme,\n            colors: {\n              ...theme.colors,\n              primary: '#05c6b4',\n              primary75: '#D3D8E6',\n              primary50: '#e0f7f5',\n              primary25: '#F3F4F8'\n            },\n          })}\n          {...rest}\n        />\n      </InputWrapper>\n    )\n  }\n}\n\nTimeZoneSelect.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  classes: PropTypes.string,\n  selectClasses: PropTypes.string,\n  timezone: PropTypes.string,\n  latitude: PropTypes.string,\n  longitude: PropTypes.string,\n  errorMessage: PropTypes.string,\n  isClearable: PropTypes.bool,\n  isMulti: PropTypes.bool,\n}\n\nTimeZoneSelect.defaultProps = {\n  classes: \"\",\n  selectClasses: \"\",\n  handleChange: (selected) => console.log(\"Implement a function to save selection\", selected),\n  isClearable: true,\n  isMulti: false,\n}\n\n"],"file":"TimeZoneSelect.js"}