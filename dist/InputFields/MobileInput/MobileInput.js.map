{"version":3,"sources":["../../../src/InputFields/MobileInput/MobileInput.js"],"names":["React","useRef","useState","PropTypes","ReactTelInput","InputWrapper","MobileInput","props","browserError","setBrowserError","label","name","id","value","handleChange","required","disabled","classes","type","errorMessage","helpText","placeholder","autoFormat","defaultCountry","flagsImagePath","onlyCountries","preferredCountries","rest","inputEl","onChange","phone","country","checkValidity","validationMessage","current","combinedErrorMessage","filter","Boolean","join","defaultProps","input","console","log","propTypes","func","isRequired","string","bool"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactTelInput from 'react-telephone-input'\nimport 'react-telephone-input/css/default.css'\nimport './mobile-input.css'\n\nimport InputWrapper from '../InputWrapper'\n\nconst MobileInput = (props) => {\n  const [ browserError, setBrowserError ] = useState()\n  const {\n    label,\n    name,\n    id,\n    value,\n    handleChange,\n    required,\n    disabled,\n    classes,\n    type,\n    errorMessage,\n    helpText,\n    placeholder,\n    autoFormat,\n    defaultCountry,\n    flagsImagePath,\n    onlyCountries,\n    preferredCountries,\n    ...rest\n  } = props;\n\n  const inputEl = useRef()\n\n  const onChange = (phone, country) => {\n    setBrowserError(null)\n    handleChange({ [name]: phone })\n  }\n\n  const checkValidity = () => {\n    const validationMessage = inputEl.current.validationMessage\n    setBrowserError(validationMessage)\n  }\n\n  const combinedErrorMessage = [browserError, errorMessage].filter(Boolean).join(\"; \")\n\n  return (\n    <InputWrapper\n      label={label}\n      name={name}\n      id={id}\n      required={required}\n      disabled={disabled}\n      errorMessage={combinedErrorMessage}\n      helpText={helpText}\n      classes={classes}\n    >\n      <ReactTelInput\n        ref={inputEl}\n        placeholder={placeholder}\n        flagsImagePath={flagsImagePath}\n        value={value}\n        onChange={onChange}\n        onBlur={checkValidity}\n        defaultCountry={defaultCountry}\n        disabled={disabled}\n        autoFormat={autoFormat}\n        onlyCountries={onlyCountries}\n        preferredCountries={preferredCountries}\n        inputProps={{\n          name: name,\n          id: name,\n          required: required,\n          ...rest\n        }}\n      />\n    </InputWrapper>\n  )\n}\n\nMobileInput.defaultProps = {\n  type: 'text',\n  value: \"\",\n  required: false,\n  disabled: false,\n  label: 'Text input',\n  classes: '',\n  handleChange: (input) => console.log(\"Implement a function to save input\", input),\n  defaultCountry: 'us',\n  autoFormat: true,\n  placeholder: '',\n  flagsImagePath: \"https://learningcircles.p2pu.org/static/images/flags.png\",\n}\n\nMobileInput.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  label: PropTypes.string,\n  classes: PropTypes.string,\n  placeholder: PropTypes.string,\n}\n\nexport default MobileInput;\n"],"file":"MobileInput.js"}