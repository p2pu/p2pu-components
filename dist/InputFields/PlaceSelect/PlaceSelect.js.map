{"version":3,"file":"PlaceSelect.js","names":["React","Component","PropTypes","axios","AsyncSelect","InputWrapper","ALGOLIA_ENDPOINT","KANSAS_CITY_OPTION","label","value","administrative","country","locale_names","_geoloc","lat","lng","PlaceSelect","props","selected","handleChange","name","setState","query","url","data","method","then","res","options","hits","map","place","generateCityOption","toLowerCase","includes","unshift","err","console","log","placeId","get","handleSelect","state","objectID","fetchPlaceById","city","id","required","disabled","errorMessage","helpText","classes","selectClasses","handleInputChange","noResultsText","placeholder","isClearable","isMulti","rest","searchPlaces","theme","colors","primary","primary75","primary50","primary25","propTypes","func","isRequired","string","place_id","bool","defaultProps"],"sources":["../../../src/InputFields/PlaceSelect/PlaceSelect.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport axios from 'axios';\nimport AsyncSelect from 'react-select/async';\nimport InputWrapper from '../InputWrapper'\n\nconst ALGOLIA_ENDPOINT = 'https://places-dsn.algolia.net/1/places'\n\nconst KANSAS_CITY_OPTION = {\n  label: 'Kansas City, Missouri, United States of America',\n  value: {\n    administrative: ['Missouri'],\n    country: {\n      default: 'United States of America'\n    },\n    locale_names: {\n      default: ['Kansas City']\n    },\n    // from https://tools.wmflabs.org\n    _geoloc: {\n      lat: 39.099722,\n      lng: -94.578333\n    }\n  }\n};\n\nexport default class PlaceSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hits: [], selected: null };\n  }\n\n  componentDidMount() {\n    if (this.props.value) {\n      const { value, name, handleChange } =  this.props\n\n      if (!!value.objectID) {\n        this.fetchPlaceById(value.objectID);\n      } else if (value.city === 'Kansas City, Missouri, United States of America') {\n        this.handleSelect(KANSAS_CITY_OPTION)\n      } else {\n        handleChange({ [name]: null })\n      }\n    }\n  }\n\n  handleSelect = (selected) => {\n    const value = selected ? selected.value : null\n    this.props.handleChange({ [this.props.name]: value })\n    this.setState({ selected })\n  }\n\n  searchPlaces = (query) => {\n    const url = `${ALGOLIA_ENDPOINT}/query/`;\n    const data = {\n      \"type\": \"city\",\n      \"hitsPerPage\": \"10\",\n      \"query\": query\n    };\n    const method = 'post';\n\n    return axios({\n      data,\n      url,\n      method\n    }).then(res => {\n      let options = res.data.hits.map(place => this.generateCityOption(place));\n      // Kansas City, MO is missing from the Algolia places API\n      // so we're manually adding it in\n      // TODO: don't do this\n      if (query.toLowerCase().includes('kansas')) {\n        options.unshift(KANSAS_CITY_OPTION)\n      }\n      return options\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  fetchPlaceById = (placeId) => {\n    const url = `${ALGOLIA_ENDPOINT}/${placeId}`;\n\n    axios.get(url)\n      .then(res => {\n        const value = this.generateCityOption(res.data)\n        this.handleSelect(value)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  generateCityOption = (place) => {\n    return {\n      label: `${place.locale_names.default[0]}, ${place.administrative[0]}, ${place.country.default}`,\n      value: place\n    }\n  }\n\n  render() {\n    const { label, name, id, value, required, disabled, errorMessage, helpText, classes, selectClasses, handleInputChange, noResultsText, placeholder, isClearable, isMulti, ...rest } = this.props\n    const { selected } = this.state;\n\n    return(\n      <InputWrapper\n        label={label}\n        name={name}\n        id={id}\n        required={required}\n        disabled={disabled}\n        errorMessage={errorMessage}\n        helpText={helpText}\n        classes={classes}\n      >\n        <AsyncSelect\n          name={ name }\n          className={ `city-select ${selectClasses}` }\n          value={ selected }\n          onChange={ this.handleSelect }\n          onInputChange={ handleInputChange }\n          noResultsText={ noResultsText }\n          placeholder={ placeholder }\n          loadOptions={ this.searchPlaces }\n          isClearable={ isClearable }\n          isMulti={ isMulti }\n          isDisabled={ disabled }\n          classNamePrefix={'place-select'}\n          theme={theme => ({\n            ...theme,\n            colors: {\n              ...theme.colors,\n              primary: '#05c6b4',\n              primary75: '#D3D8E6',\n              primary50: '#e0f7f5',\n              primary25: '#F3F4F8'\n            },\n          })}\n          {...rest}\n        />\n      </InputWrapper>\n    )\n  }\n}\n\nPlaceSelect.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleInputChange: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  classes: PropTypes.string,\n  noResultsText: PropTypes.string,\n  placeholder: PropTypes.string,\n  place_id: PropTypes.string,\n  city: PropTypes.string,\n  errorMessage: PropTypes.string,\n  isClearable: PropTypes.bool,\n  isMulti: PropTypes.bool,\n}\n\nPlaceSelect.defaultProps = {\n  noResultsText: \"No results for this city\",\n  placeholder: \"Start typing a city name...\",\n  classes: \"\",\n  selectClasses: \"\",\n  name: \"select-place\",\n  handleChange: (selected) => console.log(\"Implement a function to save selection\", selected),\n  isClearable: true,\n  isMulti: false,\n}\n\n"],"mappings":"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"}