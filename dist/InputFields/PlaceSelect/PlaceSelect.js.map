{"version":3,"file":"PlaceSelect.js","names":["React","Component","PropTypes","axios","AsyncSelect","InputWrapper","ALGOLIA_ENDPOINT","KANSAS_CITY_OPTION","label","value","administrative","country","locale_names","_geoloc","lat","lng","PlaceSelect","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","selected","handleChange","name","setState","query","url","concat","data","method","then","res","options","hits","map","place","generateCityOption","toLowerCase","includes","unshift","err","console","log","placeId","get","handleSelect","state","_createClass","key","componentDidMount","_this$props","objectID","fetchPlaceById","city","render","_this$props2","id","required","disabled","errorMessage","helpText","classes","selectClasses","handleInputChange","noResultsText","placeholder","isClearable","isMulti","rest","_objectWithoutProperties","_excluded","createElement","_extends","className","onChange","onInputChange","loadOptions","searchPlaces","isDisabled","classNamePrefix","theme","_objectSpread","colors","primary","primary75","primary50","primary25","default","propTypes","func","isRequired","string","place_id","bool","defaultProps"],"sources":["../../../src/InputFields/PlaceSelect/PlaceSelect.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport axios from 'axios';\nimport AsyncSelect from 'react-select/async';\nimport InputWrapper from '../InputWrapper'\n\n// TODO: Algolia API discontinued\n\nconst ALGOLIA_ENDPOINT = 'https://places-dsn.algolia.net/1/places'\n\nconst KANSAS_CITY_OPTION = {\n  label: 'Kansas City, Missouri, United States of America',\n  value: {\n    administrative: ['Missouri'],\n    country: {\n      default: 'United States of America'\n    },\n    locale_names: {\n      default: ['Kansas City']\n    },\n    // from https://tools.wmflabs.org\n    _geoloc: {\n      lat: 39.099722,\n      lng: -94.578333\n    }\n  }\n};\n\nexport default class PlaceSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hits: [], selected: null };\n  }\n\n  componentDidMount() {\n    if (this.props.value) {\n      const { value, name, handleChange } =  this.props\n\n      if (!!value.objectID) {\n        this.fetchPlaceById(value.objectID);\n      } else if (value.city === 'Kansas City, Missouri, United States of America') {\n        this.handleSelect(KANSAS_CITY_OPTION)\n      } else {\n        handleChange({ [name]: null })\n      }\n    }\n  }\n\n  handleSelect = (selected) => {\n    const value = selected ? selected.value : null\n    this.props.handleChange({ [this.props.name]: value })\n    this.setState({ selected })\n  }\n\n  searchPlaces = (query) => {\n    const url = `${ALGOLIA_ENDPOINT}/query/`;\n    const data = {\n      \"type\": \"city\",\n      \"hitsPerPage\": \"10\",\n      \"query\": query\n    };\n    const method = 'post';\n\n    return axios({\n      data,\n      url,\n      method\n    }).then(res => {\n      let options = res.data.hits.map(place => this.generateCityOption(place));\n      // Kansas City, MO is missing from the Algolia places API\n      // so we're manually adding it in\n      // TODO: don't do this\n      if (query.toLowerCase().includes('kansas')) {\n        options.unshift(KANSAS_CITY_OPTION)\n      }\n      return options\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  fetchPlaceById = (placeId) => {\n    const url = `${ALGOLIA_ENDPOINT}/${placeId}`;\n\n    axios.get(url)\n      .then(res => {\n        const value = this.generateCityOption(res.data)\n        this.handleSelect(value)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  generateCityOption = (place) => {\n    return {\n      label: `${place.locale_names.default[0]}, ${place.administrative[0]}, ${place.country.default}`,\n      value: place\n    }\n  }\n\n  render() {\n    const { label, name, id, value, required, disabled, errorMessage, helpText, classes, selectClasses, handleInputChange, noResultsText, placeholder, isClearable, isMulti, ...rest } = this.props\n    const { selected } = this.state;\n\n    return(\n      <InputWrapper\n        label={label}\n        name={name}\n        id={id}\n        required={required}\n        disabled={disabled}\n        errorMessage={errorMessage}\n        helpText={helpText}\n        classes={classes}\n      >\n        <AsyncSelect\n          name={ name }\n          className={ `city-select ${selectClasses}` }\n          value={ selected }\n          onChange={ this.handleSelect }\n          onInputChange={ handleInputChange }\n          noResultsText={ noResultsText }\n          placeholder={ placeholder }\n          loadOptions={ this.searchPlaces }\n          isClearable={ isClearable }\n          isMulti={ isMulti }\n          isDisabled={ disabled }\n          classNamePrefix={'place-select'}\n          theme={theme => ({\n            ...theme,\n            colors: {\n              ...theme.colors,\n              primary: '#05c6b4',\n              primary75: '#D3D8E6',\n              primary50: '#e0f7f5',\n              primary25: '#F3F4F8'\n            },\n          })}\n          {...rest}\n        />\n      </InputWrapper>\n    )\n  }\n}\n\nPlaceSelect.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleInputChange: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  classes: PropTypes.string,\n  noResultsText: PropTypes.string,\n  placeholder: PropTypes.string,\n  place_id: PropTypes.string,\n  city: PropTypes.string,\n  errorMessage: PropTypes.string,\n  isClearable: PropTypes.bool,\n  isMulti: PropTypes.bool,\n}\n\nPlaceSelect.defaultProps = {\n  noResultsText: \"No results for this city\",\n  placeholder: \"Start typing a city name...\",\n  classes: \"\",\n  selectClasses: \"\",\n  name: \"select-place\",\n  handleChange: (selected) => console.log(\"Implement a function to save selection\", selected),\n  isClearable: true,\n  isMulti: false,\n}\n\n"],"mappings":"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"}