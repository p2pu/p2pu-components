{"version":3,"sources":["../../../src/InputFields/ImageUploader/ImageUploader.js"],"names":["React","Component","PropTypes","axios","slugify","InputWrapper","defaultStyles","preview","maxWidth","height","input","display","label","borderRadius","textTransform","fontSize","fontFamily","fontWeight","padding","transform","boxShadow","position","transition","margin","background","border","color","marginRight","ImageUploader","props","opts","url","data","config","method","responseType","then","res","errors","onError","onSuccess","err","console","log","onFail","e","imageUploadUrl","file","currentTarget","files","filename","name","FormData","append","setState","image","image_url","handleChange","headers","saveImage","state","value","required","disabled","errorMessage","helpText","labelStyles","inputStyles","imgStyles","acceptedMimetypes","buttonText","classes","id","rest","onChange","marginTop","propTypes","string","isRequired","func","object","defaultProps","imgUrl"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport slugify from 'slugify';\nimport InputWrapper from '../InputWrapper'\n\nconst defaultStyles = {\n  preview: {\n    maxWidth: '250px',\n    height: 'auto',\n  },\n  input: {\n    display: \"none !important\"\n  },\n  label: {\n    borderRadius: \"2em\",\n    textTransform: \"uppercase\",\n    fontSize: \"0.8em\",\n    fontFamily: \"'Open Sans','Helvetica Neue',Helvetica,Arial,sans-serif\",\n    fontWeight: \"700\",\n    padding: \"10px 20px\",\n    transform: \"perspective(1px) translateZ(0)\",\n    boxShadow: \"0 0 1px transparent\",\n    position: \"relative\",\n    transition: \"color 0.3s linear\",\n    display: \"inline-block\",\n    margin: '2px',\n    background: \"#515665\",\n    border: \"2px solid #515665\",\n    color: \"#fff\",\n    marginRight: '6px',\n  }\n}\n\nexport default class ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: this.props.image,\n      file: null,\n    };\n  }\n\n  saveImage = opts => {\n    const url = opts.url;\n    const data = opts.data;\n    const config = opts.config;\n\n    axios({\n      url,\n      data,\n      config,\n      method: 'post',\n      responseType: 'json',\n    }).then(res => {\n      if (res.data.errors) {\n        return opts.onError(res.data)\n      }\n      opts.onSuccess(res.data)\n    }).catch(err => {\n      console.log(err)\n      opts.onFail(err)\n    })\n  }\n\n  onChange = (e) => {\n    const url = this.props.imageUploadUrl;\n    const file = e.currentTarget.files[0];\n    const filename = slugify(file.name)\n    const data = new FormData();\n    data.append('image', file, filename)\n\n    this.setState({ file })\n\n    const onSuccess = (data) => {\n      this.setState({ image: data.image_url });\n      this.props.handleChange({ [this.props.name]: data.image_url })\n    }\n\n    const onError = (data) => {\n      console.log(data.errors)\n      this.props.handleChange({ [this.props.name]: null })\n    }\n\n    const onFail = (err) => {\n      console.log(err)\n    }\n\n    const config = { headers: {'Content-Type': 'multipart/form-data' }}\n    const opts = { url, data, config, onSuccess, onError, onFail };\n\n    this.saveImage(opts);\n  }\n\n  render() {\n    const {\n      label,\n      name,\n      value,\n      required,\n      disabled,\n      errorMessage,\n      helpText,\n      labelStyles,\n      inputStyles,\n      imgStyles,\n      acceptedMimetypes,\n      buttonText,\n      classes,\n      handleChange,\n      id,\n      imageUploadUrl,\n      ...rest\n    } = this.props;\n    const { image, file } = this.state;\n    return(\n      <InputWrapper\n        label={label}\n        name={name}\n        id={id}\n        required={required}\n        disabled={disabled}\n        errorMessage={errorMessage}\n        helpText={helpText}\n        classes={classes}\n      >\n        <div>\n          <label htmlFor={\"image-uploader\"} className=\"btn p2pu-btn dark\" style={{...defaultStyles.label, ...labelStyles}}>\n            { buttonText }\n            <input\n              className='image-upload form-control hidden'\n              type='file'\n              name={\"image-uploader\"}\n              id={\"image-uploader\"}\n              required={required}\n              disabled={disabled}\n              onChange={this.onChange}\n              style={{...defaultStyles.input, ...inputStyles}}\n              hidden={true}\n              accept={acceptedMimetypes}\n              {...rest}\n            />\n          </label>\n          {\n            file ? <span>{file.name}</span> : <span>No file selected</span>\n          }\n          {\n            image &&\n            <div className='image-preview' style={{ marginTop: '10px' }}>\n              <img src={image} alt='Image preview' style={{...defaultStyles.preview, ...imgStyles}} />\n            </div>\n          }\n        </div>\n      </InputWrapper>\n    )\n  }\n}\n\nImageUploader.propTypes = {\n  imageUploadUrl: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  classes: PropTypes.string,\n  label: PropTypes.string,\n  errorMessage: PropTypes.string,\n  helpText: PropTypes.string,\n  image: PropTypes.string,\n  imgStyles: PropTypes.object,\n  labelStyles: PropTypes.object,\n  inputStyles: PropTypes.object,\n  acceptedMimetypes: PropTypes.string,\n  buttonText: PropTypes.string,\n}\n\nImageUploader.defaultProps = {\n  handleChange: (imgUrl) => `Implement a function to save image ${imgUrl}`,\n  acceptedMimetypes: \"image/*\",\n  buttonText: 'Choose file',\n  imageUploadUrl: \"https://learningcircles.p2pu.org/api/upload_image/\"\n}\n"],"file":"ImageUploader.js"}