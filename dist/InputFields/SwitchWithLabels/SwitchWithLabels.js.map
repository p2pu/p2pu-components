{"version":3,"sources":["../../../src/InputFields/SwitchWithLabels/SwitchWithLabels.js"],"names":["React","Component","PropTypes","InputWrapper","SwitchWithLabels","props","falseLabel","trueLabel","label","name","id","required","disabled","errorMessage","helpText","classes","offColor","onColor","value","handleChange","rest","bgColor","onChange","event","checked","currentTarget","onClickLabel","backgroundColor","propTypes","func","isRequired","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport InputWrapper from '../InputWrapper'\nimport \"./switch.css\"\n\nconst SwitchWithLabels = props => {\n  const { falseLabel, trueLabel, label, name, id, required, disabled, errorMessage, helpText, classes, offColor, onColor, value, handleChange, ...rest } = props;\n  const bgColor = value ? onColor : offColor;\n\n  const onChange = (event) => {\n    const checked = event.currentTarget.checked;\n    handleChange({ [name]: checked });\n  }\n\n  const onClickLabel = (checked) => {\n    return () => { handleChange({ [name]: checked }) };\n  }\n\n  return(\n    <InputWrapper\n      label={label}\n      name={name}\n      id={id}\n      required={required}\n      disabled={disabled}\n      errorMessage={errorMessage}\n      helpText={helpText}\n      classes={classes}\n    >\n      <div className=\"switch-container\">\n        <span onClick={onClickLabel(false)}>{ falseLabel }</span>\n        <label>\n          <input\n            checked={ value }\n            onChange={ onChange }\n            className=\"switch\"\n            type=\"checkbox\"\n            disabled={disabled}\n            required={required}\n            {...rest}\n          />\n          <div className={`switch-background ${value ? 'on' : 'off'}`} style={{ backgroundColor: bgColor }}>\n            <div className=\"switch-button\"></div>\n          </div>\n        </label>\n        <span onClick={onClickLabel(true)}>{ trueLabel }</span>\n      </div>\n    </InputWrapper>\n  );\n}\n\nSwitchWithLabels.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  falseLabel: PropTypes.string.isRequired,\n  trueLabel: PropTypes.string.isRequired,\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  errorMessage: PropTypes.string,\n  helpText: PropTypes.string,\n  required: PropTypes.bool,\n  offColor: PropTypes.string,\n  onColor: PropTypes.string,\n}\n\nSwitchWithLabels.defaultProps = {\n  handleChange: (checked) => `Implement a function to save checked input: ${checked}`,\n  falseLabel: \"Off\",\n  trueLabel: \"On\",\n  value: false,\n  offColor: '#515665', // dark gray\n  onColor: '#05c6b4', // teal\n}\n\nexport default SwitchWithLabels"],"file":"SwitchWithLabels.js"}