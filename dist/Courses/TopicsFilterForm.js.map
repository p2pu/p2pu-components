{"version":3,"sources":["../../src/Courses/TopicsFilterForm.jsx"],"names":["React","Component","ApiHelper","t","Select","TopicsFilterForm","props","resourceType","searchSubject","api","params","callback","response","topics","Object","keys","sort","options","mapArrayToSelectOptions","setState","fetchResource","topic","updateQueryParams","filter","array","map","value","label","state","fetchTopics","option","indexOf","onChange","e","removeTopic"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ApiHelper from '../utils/apiHelper'\nimport { t } from 'ttag'\nimport Select from '../InputFields/Select';\n\nexport default class TopicsFilterForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { options: [] }\n  }\n\n  componentDidMount() {\n    this.fetchTopics();\n  }\n\n  fetchTopics = () => {\n    const resourceType = `${this.props.searchSubject}Topics`;\n    const api = new ApiHelper(resourceType);\n    const params = {};\n    const callback = (response) => {\n      const topics = Object.keys(response.topics).sort()\n      const options = this.mapArrayToSelectOptions(topics);\n      this.setState({ options })\n    }\n\n    api.fetchResource({ params, callback })\n  }\n\n  onChange = ({topic}) => {\n    let {topics = []} = this.props;\n    if (topic) {\n      this.props.updateQueryParams({topics: [...topics, topic]});\n    }\n  }\n\n  removeTopic = (topic) => {\n    this.props.updateQueryParams({topics: this.props.topics.filter(t => t != topic)});\n  }\n\n  mapArrayToSelectOptions = (array) => {\n    return array.map((topic) => ({ value: topic, label: topic }))\n  }\n\n  render() {\n    let {topics = []} = this.props;\n    let options = this.state.options.filter( option => topics.indexOf(option.value) == -1);\n\n    return(\n      <>\n        <form class=\"search\">\n          <label for=\"search-input\" class=\"form-label\">Topics</label>\n          <Select\n            name={'topic'}\n            options={options}\n            isMulti={false}\n            value={null}\n            handleChange={this.onChange}\n            placeholder={t`Select topic(s)`}\n          />\n          <div class=\"badges selected pt-4\">\n            { \n              this.props.topics && topics.map(topic => \n                <span class=\"badge topic-selected topic\">\n                  <span class=\"material-icons dismiss\" role=\"button\" onClick={e => this.removeTopic(topic)}>close</span>{topic}</span>\n              )\n            }\n          </div>\n        </form>\n      </>\n    )\n  }\n}\n"],"file":"TopicsFilterForm.js"}