{"version":3,"sources":["../../src/utils/i18n.js"],"names":["t","WEEK_DAYS","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","day","day_","hasOwnProperty","date","date_","locale","localDate","Date","toLocaleDateString","year","month","timeZone","time","time_","split","h","m","s","now","setHours","setMinutes","toLocaleTimeString","hour","minute","LANGUAGES","isoCodeToLangName","code","nativeName"],"mappings":";;;;;AAAA,SAAQA,CAAR,QAAgB,MAAhB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAEF,CAAF,2EADU;AAEhBG,EAAAA,OAAO,EAAEH,CAAF,8EAFS;AAGhBI,EAAAA,SAAS,EAAEJ,CAAF,gFAHO;AAIhBK,EAAAA,QAAQ,EAAEL,CAAF,+EAJQ;AAKhBM,EAAAA,MAAM,EAAEN,CAAF,6EALU;AAMhBO,EAAAA,QAAQ,EAAEP,CAAF,+EANQ;AAOhBQ,EAAAA,MAAM,EAAER,CAAF;AAPU,CAAlB;AAUA,OAAO,SAASS,GAAT,CAAaC,IAAb,EAAmB;AACxB,MAAIT,SAAS,CAACU,cAAV,CAAyBD,IAAzB,CAAJ,EAAmC;AACjC,WAAOT,SAAS,CAACS,IAAD,CAAhB;AACD;;AACD,SAAOA,IAAP;AACD;AAAA;AAED;;AACA,OAAO,SAASE,IAAT,CAAcC,KAAd,EAAoC;AAAA,MAAfC,MAAe,uEAAR,OAAQ;AACzC;AACA;AACA;AACA;AACA;AACA,MAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASH,KAAT,EAAgBI,kBAAhB,CAAmCH,MAAnC,EAA2C;AACzDI,IAAAA,IAAI,EAAE,SADmD;AACxCC,IAAAA,KAAK,EAAE,MADiC;AACzBV,IAAAA,GAAG,EAAE,SADoB;AACTW,IAAAA,QAAQ,EAAE;AADD,GAA3C,CAAhB;AAGA,SAAOL,SAAP;AACD;AAED;;AACA,OAAO,SAASM,IAAT,CAAcC,KAAd,EAAoB;AACzB,qBAAcA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAAd;AAAA;AAAA,MAAKC,CAAL;AAAA,MAAOC,CAAP;AAAA,MAASC,CAAT;;AACA,MAAIC,GAAG,GAAG,IAAIX,IAAJ,EAAV;AACAW,EAAAA,GAAG,CAACC,QAAJ,CAAaJ,CAAb;AACAG,EAAAA,GAAG,CAACE,UAAJ,CAAeJ,CAAf;AACA,SAAOE,GAAG,CAACG,kBAAJ,CAAuB,OAAvB,EAAgC;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,MAAM,EAAC;AAAzB,GAAhC,CAAP;AACD;AAED,IAAMC,SAAS,GAAG;AAChB,QAAM;AACJ,YAAO,SADH;AAEJ,kBAAa;AAFT,GADU;AAKhB,QAAM;AACJ,YAAO,SADH;AAEJ,kBAAa;AAFT,GALU;AAShB,QAAM;AACJ,YAAO,QADH;AAEJ,kBAAa;AAFT,GATU;AAahB,QAAM;AACJ,YAAO,QADH;AAEJ,kBAAa;AAFT,GAbU;AAiBhB,QAAM;AACJ,YAAO,QADH;AAEJ,kBAAa;AAFT,GAjBU;AAqBhB,QAAM;AACJ,YAAO,YADH;AAEJ,kBAAa;AAFT,GArBU;AAyBhB,QAAM;AACJ,YAAO,+BADH;AAEJ,kBAAa;AAFT,GAzBU;AA6BhB,QAAM;AACJ,YAAO,oBADH;AAEJ,kBAAa;AAFT;AA7BU,CAAlB;AAmCA,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAgC;AACrC,MAAIF,SAAS,CAACtB,cAAV,CAAyBwB,IAAzB,CAAJ,EAAmC;AACjC,WAAOF,SAAS,CAACE,IAAD,CAAT,CAAgBC,UAAvB;AACD;;AACD,SAAOD,IAAP;AACD","sourcesContent":["import {t} from 'ttag';\n\nconst WEEK_DAYS = {\n  Monday: t`Monday`,\n  Tuesday: t`Tuesday`,\n  Wednesday: t`Wednesday`,\n  Thursday: t`Thursday`,\n  Friday: t`Friday`,\n  Saturday: t`Saturday`,\n  Sunday: t`Sunday`,\n}\n\nexport function day(day_) {\n  if (WEEK_DAYS.hasOwnProperty(day_)){\n    return WEEK_DAYS[day_];\n  }\n  return day_;\n};\n\n/* Convert a date (YYYY-MM-DD) to the locale format */\nexport function date(date_, locale='en-US'){\n  // Since a date without a time will be in UTC, the timeZone used for output should\n  // also be UTC. If not specified, the timezone of the user will be used, iow, a meeting\n  // late Monday evening EST would show as Tuesday in CEST.\n  // TODO - this translation is dynamic, while the rest of the translation is static\n  //      - it's baked in when webpack builds it\n  let localDate = new Date(date_).toLocaleDateString(locale, {\n    year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC'\n  })\n  return localDate;\n}\n\n/* takes time formatted as hh:mm:ss and outputs it without seconds in the locale format */\nexport function time(time_){\n  let [h,m,s] = time_.split(':');\n  let now = new Date();\n  now.setHours(h);\n  now.setMinutes(m);\n  return now.toLocaleTimeString('en-US', {hour: 'numeric', minute:'2-digit'});\n}\n\nconst LANGUAGES = {\n  \"en\": {\n    \"name\":\"English\",\n    \"nativeName\":\"English\"\n  },\n  \"fi\": {\n    \"name\":\"Finnish\",\n    \"nativeName\":\"suomi, suomen kieli\"\n  },\n  \"fr\": {\n    \"name\":\"French\",\n    \"nativeName\":\"français, langue française\"\n  },\n  \"de\": {\n    \"name\":\"German\",\n    \"nativeName\":\"Deutsch\"\n  },\n  \"pl\": {\n    \"name\":\"Polish\",\n    \"nativeName\":\"polski\"\n  },\n  \"pt\": {\n    \"name\":\"Portuguese\",\n    \"nativeName\":\"Português\"\n  },\n  \"ro\": {\n    \"name\":\"Romanian, Moldavian, Moldovan\",\n    \"nativeName\":\"română\"\n  },\n  \"es\": {\n    \"name\":\"Spanish; Castilian\",\n    \"nativeName\":\"español, castellano\"\n  },\n};\n\nexport function isoCodeToLangName(code){\n  if (LANGUAGES.hasOwnProperty(code)){\n    return LANGUAGES[code].nativeName;\n  }\n  return code;\n}\n"],"file":"i18n.js"}